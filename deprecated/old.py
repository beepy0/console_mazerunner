view = [
    [' ', ' ', ' ', '$', '$', '$', '$', ' ', ' ', '%', '%', ' ', ' ', ' ', ' ', ' ', ' ', '%', '%', ' ', ' ', '$', '$', '$', '$', ' ', ' ', ' '],
    [' ', ' ', ' ', '$', '$', '$', '$', ' ', ' ', '%', '%', '%', ' ', ' ', ' ', ' ', '%', '%', '%', ' ', ' ', '$', '$', '$', '$', ' ', ' ', ' '],
    [' ', ' ', ' ', '$', '$', '$', '$', ' ', ' ', '%', '%', '%', ' ', ' ', ' ', ' ', '%', '%', '%', ' ', ' ', '$', '$', '$', '$', ' ', ' ', ' '],
    [' ', ' ', ' ', '$', '$', '$', '$', ' ', ' ', '%', '%', '%', ' ', ' ', ' ', ' ', '%', '%', '%', ' ', ' ', '$', '$', '$', '$', ' ', ' ', ' '],
    [' ', ' ', ' ', '$', '$', '$', '$', ' ', ' ', '%', '%', '%', ' ', ' ', ' ', ' ', '%', '%', '%', ' ', ' ', '$', '$', '$', '$', ' ', ' ', ' '],
    [' ', ' ', ' ', '$', '$', '$', '$', ' ', ' ', '%', '%', ' ', ' ', ' ', ' ', ' ', ' ', '%', '%', ' ', ' ', '$', '$', '$', '$', ' ', ' ', ' '],
    [' ', ' ', ' ', '$', '$', '$', '$', ' ', ' ', '%', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '%', ' ', ' ', '$', '$', '$', '$', ' ', ' ', ' '],
]
viewport_length = len(view[0])


def rotate_through_middle(row_ind, scanline, rotation_dir):
    if rotation_dir == Direction.LEFT:
        scl_half = deque(scanline[:int(viewport_length/2)])
    elif rotation_dir == Direction.RIGHT:
        scl_half = deque(scanline[int(viewport_length/2):])
    else:
        raise 'Wrong rotation direction passed'

    scl_half.rotate(rotation_dir.value)

    if rotation_dir == Direction.LEFT:
        view[row_ind][:int(viewport_length/2)] = scl_half
    elif rotation_dir == Direction.RIGHT:
        view[row_ind][int(viewport_length/2):] = scl_half

# player_map = [
#     ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'],
#     ['1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1'],
#     ['1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1'],
#     ['1', ' ', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', ' ', '1'],
#     ['1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', '1'],
#     ['1', ' ', ' ', ' ', '1', '1', '1', '1', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', '1'],
#     ['1', ' ', ' ', ' ', '1', '3', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', '1'],
#     ['1', ' ', '1', '1', '1', '1', '1', '1', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', '1'],
#     ['1', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', '1'],
#     ['1', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', '1'],
#     ['1', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', '1'],
#     ['1', ' ', '1', '1', '1', '1', ' ', ' ', ' ', ' ', ' ', '1', '1', '1', '1', '1', '1', '1', '1', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', '1'],
#     ['1', ' ', '1', ' ', ' ', '1', '1', ' ', ' ', ' ', '1', '1', ' ', ' ', ' ', ' ', ' ', ' ', '1', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', '1', '1'],
#     ['1', ' ', '1', ' ', '1', ' ', '1', '1', ' ', '1', '1', ' ', '1', ' ', ' ', ' ', ' ', ' ', '1', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', '1'],
#     ['1', ' ', '1', ' ', '1', '1', ' ', '1', '1', '1', ' ', '1', '1', '1', '1', ' ', '1', ' ', ' ', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', ' ', '1'],
#     ['1', ' ', '1', ' ', '1', '1', '1', ' ', '1', ' ', '1', '1', ' ', ' ', '1', '1', '1', ' ', '1', ' ', '1', ' ', ' ', ' ', ' ', ' ', '1', '1', '1', '1', ' ', '1'],
#     ['1', ' ', '1', ' ', '1', ' ', '1', '1', ' ', '1', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', '1', '1', '1', '1', ' ', '1', '1', '1', '1', ' ', '1'],
#     ['1', ' ', '1', ' ', '1', ' ', ' ', '1', '1', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', '1', '1', '1', '1', ' ', '1', '1', '1', '1', ' ', '1'],
#     ['1', ' ', '1', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', '1', '1', '1', ' ', '1', '1', '1', ' ', ' ', '1', '1', '1', '1', ' ', '1'],
#     ['1', ' ', '1', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', ' ', '1', ' ', '1', '1', '1', ' ', '1', '1', '1', '1', '1', ' ', '1'],
#     ['1', ' ', '1', ' ', '1', ' ', '1', '1', '1', '1', '1', ' ', ' ', '1', '1', '1', '1', ' ', ' ', '1', ' ', '1', '1', '1', ' ', ' ', ' ', '1', '1', '1', ' ', '1'],
#     ['1', ' ', '1', ' ', '1', ' ', '1', ' ', ' ', ' ', '1', ' ', '1', '1', ' ', ' ', ' ', ' ', ' ', '1', ' ', '1', '1', '1', '1', '1', ' ', '1', '1', '1', ' ', '1'],
#     ['1', ' ', '1', ' ', '1', ' ', '1', ' ', ' ', ' ', '1', '1', '1', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', '1', '1', '1', '1', ' ', '1', '1', '1', '1', ' ', '1'],
#     ['1', ' ', '1', ' ', '1', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', '1', '1', '1', ' ', '1', '1', '1', '1', '1', ' ', '1'],
#     ['1', ' ', ' ', ' ', '1', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', '1', '1', ' ', '1', '1', '1', '1', '1', '1', ' ', '1'],
#     ['1', ' ', ' ', ' ', '1', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', '1', '1', ' ', '1', '1', '1', '1', '1', '1', ' ', '1'],
#     ['1', ' ', ' ', ' ', '1', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', '1', '1', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1'],
#     ['1', ' ', ' ', ' ', '1', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1'],
#     ['1', ' ', ' ', ' ', '1', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1'],
#     ['1', ' ', ' ', ' ', '1', ' ', '1', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1'],
#     ['1', ' ', ' ', ' ', '1', '1', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1'],
#     ['1', '1', '1', '1', ' ', '1', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1'],
#     ['1', '1', ' ', ' ', ' ', '1', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1'],
#     ['1', ' ', '1', ' ', ' ', '1', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1'],
#     ['1', ' ', '1', ' ', ' ', '1', ' ', '1', '1', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1'],
#     ['1', ' ', '1', ' ', ' ', '1', ' ', ' ', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1'],
#     ['1', ' ', ' ', ' ', ' ', '1', '1', '1', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1'],
#     ['1', ' ', ' ', ' ', '1', ' ', ' ', '1', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1'],
#     ['1', ' ', ' ', ' ', '1', ' ', ' ', '1', '1', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1'],
#     ['1', ' ', ' ', ' ', '1', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '1'],
#     ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1']
# ]


def shade_lamp_lighting():
    for coord, value in map_coords.items():
        if value == 'Â¥':
            for x, y in [(1,0),(-1,0),(0,1),(0,-1)]:
                light_based_on_coords(coord[0] + x, coord[1] + y)


def light_based_on_coords(x, y):
    if map_coords.get((x, y), 'NaN') in ' ':
        player_map[x][y] = colorama.Back.YELLOW + colorama.Style.DIM + map_coords.get((x, y)) \
                           + colorama.Back.BLACK